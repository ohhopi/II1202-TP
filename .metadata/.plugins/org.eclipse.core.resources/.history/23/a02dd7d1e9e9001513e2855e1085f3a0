public class ArbreBinaire {
	private Noeud racine;
	
	private static class Noeud {
		Noeud gauche;
		Noeud droite;
		String nom;
		
		Noeud(String NewNom){
			gauche = null;
			droite = null;
			nom = NewNom;
		}
	}
	public ArbreBinaire(){
		this.racine = null;
	}
	
	public ArbreBinaire(String nom){
		this.racine.nom = nom;
	}
	public ArbreBinaire(String nom, String gauche, String droite){
		this.racine.nom = nom;
		
	}
	
	 /**
	   Inserts the given data into the binary tree.
	   Uses a recursive helper.
	  */
	  public void insert(String nom) {
	    racine = insert(racine, nom);
	  }
	 

	  /**
	   Recursive insert -- given a node pointer, recur down and
	   insert the given data into the tree. Returns the new
	   node pointer (the standard way to communicate
	   a changed pointer back to the caller).
	  */
	  private Noeud insert(Noeud node, String data) {
	    if (node==null) {
	      node = new Noeud(data);
	    }
	    else {
	      if (data <= node.data) {
	        node.left = insert(node.left, data);
	      }
	      else {
	        node.right = insert(node.right, data);
	      }
	    }

	    return(node); // in any case, return the new pointer to the caller
	  }
	
	public static void main(String[] args){
		ArbreBinaire arbre = new ArbreBinaire("A");
	}
}
